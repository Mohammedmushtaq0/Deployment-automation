name: Deploy to ECS Fargate with Terraform

on:
  workflow_run:
    workflows: ["Build & Push Docker Image to ECR"]
    types:
      - completed

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
  IMAGE_TAG: latest

jobs:
  terraform-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Configure AWS creds
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 3: Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      # Step 4: Terraform Init
      - name: Terraform Init
        run: terraform init

      # Step 5: Terraform Validate
      - name: Terraform Validate
        run: terraform validate

      # Step 6: Terraform Apply with required vars
      - name: Terraform Apply
        run: |
          terraform apply -auto-approve -input=false \
            -var "app_name=${{ secrets.ECR_REPOSITORY }}" \
            -var "image_uri=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}" \
            -var "container_port=80" \
            -var "subnets=${{ secrets.SUBNET_IDS }}" \
            -var "security_groups=${{ secrets.SECURITY_GROUP_IDS }}" \
            -var "target_group_arn=${{ secrets.ALB_TARGET_GROUP_ARN }}" \
            -var "aws_region=${{ secrets.AWS_REGION }}" \
            -var "aws_account_id=${{ secrets.AWS_ACCOUNT_ID }}"
