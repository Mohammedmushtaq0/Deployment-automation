name: CI/CD to ECS Fargate with Terraform

on:
  workflow_run:
    workflows: ["Build & Push Docker Image to AWS ECR"]
    types:
      - completed

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }} # Existing ECR repo name
  IMAGE_TAG: ${{ github.sha }}

jobs:
  docker-build-and-push:
    name: Build & Push Docker Image to ECR
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Check for Dockerfile
      - name: Verify Dockerfile exists
        run: |
          if [ ! -f Dockerfile ]; then
            echo "❌ No Dockerfile found in root directory!"
            exit 1
          fi
          echo "✅ Dockerfile found."

      # Step 3: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 4: Login to Amazon ECR
      - name: Login to Amazon ECR
        run: aws ecr get-login-password --region $AWS_REGION \
          | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

      # Step 5: Build Docker image
      - name: Build Docker image
        run: docker build -t $ECR_REPOSITORY:$IMAGE_TAG .

      # Step 6: Tag Docker image with full ECR path
      - name: Tag Docker image
        run: docker tag $ECR_REPOSITORY:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG

      # Step 7: Push Docker image to ECR
      - name: Push Docker image
        run: docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG

      # Step 8: Save image URI for next job
      - name: Export image URI
        run: echo "IMAGE_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_ENV

  terraform-deploy:
    name: Deploy ECS with Terraform
    runs-on: ubuntu-latest
    needs: docker-build-and-push

    steps:
      # Step 1: Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 3: Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      # Step 4: Terraform Init
      - name: Terraform Init
        run: terraform init
        # If TF files are in terraform/ folder:
        # working-directory: ./terraform

      # Step 5: Terraform Validate
      - name: Terraform Validate
        run: terraform validate
        # working-directory: ./terraform

      # Step 6: Terraform Apply with image URI
      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false \
          -var "app_name=${{ secrets.ECR_REPOSITORY }}" \
          -var "container_port=80" \
          -var "image_uri=${{ env.IMAGE_URI }}"
        # working-directory: ./terraform
